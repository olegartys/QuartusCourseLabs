// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/07/2017 12:47:30"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          lab3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg a0;
reg a1;
reg a2;
reg a3;
reg a4;
reg a5;
reg a6;
reg a7;
reg a8;
reg a9;
reg a10;
reg a11;
// wires                                               
wire pin_name1;

// assign statements (if any)                          
lab3 i1 (
// port map - connection between master ports and signals/registers   
	.a0(a0),
	.a1(a1),
	.a2(a2),
	.a3(a3),
	.a4(a4),
	.a5(a5),
	.a6(a6),
	.a7(a7),
	.a8(a8),
	.a9(a9),
	.a10(a10),
	.a11(a11),
	.pin_name1(pin_name1)
);
initial 
begin 
#1000000 $finish;
end 

// a0
initial
begin
	a0 = 1'b0;
end 

// a1
initial
begin
	a1 = 1'b0;
	a1 = #640000 1'b1;
end 

// a2
initial
begin
	a2 = 1'b1;
	a2 = #640000 1'b0;
end 

// a3
initial
begin
	a3 = 1'b1;
	a3 = #640000 1'b0;
end 

// a4
initial
begin
	a4 = 1'b1;
	a4 = #640000 1'b0;
end 

// a5
initial
begin
	a5 = 1'b1;
	a5 = #640000 1'b0;
end 

// a6
initial
begin
	a6 = 1'b0;
	a6 = #320000 1'b1;
	a6 = #320000 1'b0;
	a6 = #320000 1'b1;
end 

// a7
initial
begin
	repeat(3)
	begin
		a7 = 1'b0;
		a7 = #160000 1'b1;
		# 160000;
	end
	a7 = 1'b0;
end 

// a8
initial
begin
	repeat(6)
	begin
		a8 = 1'b0;
		a8 = #80000 1'b1;
		# 80000;
	end
	a8 = 1'b0;
end 

// a9
initial
begin
	repeat(12)
	begin
		a9 = 1'b0;
		a9 = #40000 1'b1;
		# 40000;
	end
	a9 = 1'b0;
end 

// a10
always
begin
	a10 = 1'b0;
	a10 = #20000 1'b1;
	#20000;
end 

// a11
always
begin
	a11 = 1'b0;
	a11 = #10000 1'b1;
	#10000;
end 
endmodule

